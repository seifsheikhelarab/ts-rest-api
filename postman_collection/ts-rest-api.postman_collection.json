{
	"info": {
		"_postman_id": "5d7dd390-be49-4154-8c9f-98cd0d09c74f",
		"name": "ts-rest-api",
		"description": "A TypeScript-based REST API for user authentication and management with JWT-based authentication, bcrypt password hashing, and secure session handling.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "38348561"
	},
	"item": [
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Register",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Parse the response JSON\r",
									"const responseJson = pm.response.json();\r",
									"\r",
									"// Extract the _id (directly from the root level)\r",
									"const userId = responseJson._id;\r",
									"\r",
									"if (userId) {\r",
									"  // Set the _id as a collection variable\r",
									"  pm.collectionVariables.set(\"_id\", userId);\r",
									"  console.log(\"Extracted _id:\", userId);\r",
									"} else {\r",
									"  console.error(\"The _id is not present in the response.\");\r",
									"}\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"user@example.com\",\r\n    \"password\": \"pass\",\r\n    \"username\": \"user\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/auth/register",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"auth",
								"register"
							]
						},
						"description": "Register a new user.\n\nby giving them an email, a password and a username"
					},
					"response": []
				},
				{
					"name": "Login",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"user@example.com\",\r\n    \"password\": \"pass\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/auth/login",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"auth",
								"login"
							]
						},
						"description": "Logging in with the email and the password gives the user a valid session token"
					},
					"response": []
				}
			],
			"description": "Authentication Routes for registering a new user and logging in using the email and password"
		},
		{
			"name": "Users",
			"item": [
				{
					"name": "Get",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/users/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"users",
								""
							]
						},
						"description": "retrieve a list of all users. (Protected route)"
					},
					"response": []
				},
				{
					"name": "Delete",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/users/{{_id}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"users",
								"{{_id}}"
							]
						},
						"description": "Delete a user (only if the logged-in user is the owner)."
					},
					"response": []
				},
				{
					"name": "Update",
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\":\"modifiedUsername\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/users/{{_id}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"users",
								"{{_id}}"
							]
						},
						"description": "Update a user's details (only if the logged-in user is the owner)."
					},
					"response": []
				}
			],
			"description": "Routes for User Managment and viewing"
		}
	],
	"variable": [
		{
			"key": "Id",
			"value": ":id"
		},
		{
			"key": "_id",
			"value": ""
		},
		{
			"key": "userId",
			"value": "",
			"type": "default"
		}
	]
}